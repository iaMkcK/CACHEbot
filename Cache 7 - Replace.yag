{{/* 
        Trigger Type: Command - /cReplace @<User Being Replaced> @<User Replacing them>

        Role Reqs: Admin Only

        Purpose: This was created because I broke the bot one night. We typically don't let users
          renege their bets, but sometimes when things break, and we have to restart the bot, this
          makes it easier for the admin to just "Fill" a slot that was previously filled by reacting,
          and then just using this command to swap their name to the rightful owner before the bot
          had broken. It does post some confirmation messages that DO NOT disappear, as we want the
          commands to be logged for posterity reasons. It just searches the Sign-Up Message for the
          specified User ID, and replaces it with another specified User ID. Pretty much it. lol.

        Copyright (c): i aM kcK, 2023
        License: MIT
        Repository: https://github.com/iaMkcK/CACHEbot
*/}}


{{ $args := parseArgs 2 "Proper way of using is /cReplace @<Person Being Replaced!> @<Person Replacing Them!> -- ex: /cReplace <@272285924254285824> <@186921411359670275>\nIf you continue to need help, please contact <@186921411359670275>." (carg "userid" "Person Being Replace") (carg "userid" "Person Replacing") }}
{{ $cRe1 := (print "<@" ($args.Get 0) ">") }}
{{ $cRe2 := (print "<@" ($args.Get 1) ">") }}
{{ $cMsg := toInt (dbGet 200 "cMsg").Value }}
{{ $rMsg := getMessage 1082576076758335498 $cMsg }}

{{if (reFind $cRe1 (index $rMsg.Embeds 0).Description) }}
  {{ editMessage 1082576076758335498 $cMsg (cembed "title" (index $rMsg.Embeds 0).Title "description" (reReplace $cRe1 (index $rMsg.Embeds 0).Description $cRe2)) }}
  {{ sendMessageNoEscape nil (print "ADMIN COMMAND RECEIVED. We are replacing " $cRe1 " with " $cRe2 " in the Bet List -- Command Processed Correctly.") }}
{{else}}
  {{ sendMessageNoEscape nil (print "ADMIN COMMAND RECEIVED... Except.. That user isn't in the betting list, so.. what the fuck are you doing?") }}
{{end}}

